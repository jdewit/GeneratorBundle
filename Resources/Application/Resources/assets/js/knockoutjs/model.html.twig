function {{ entity_cc }}Model(options) {
    var self = this,
        {{ entity_cc }} = options ? options.{{ entity_cc }} : null,
        list = options ? options.list : null; 

    self.{{ entity_cc }}Id = ko.observable();
{% for field in fields %}
{% if field.type == 'oneToMany' %}
    self.{{ field.fieldName }} = ko.observableArray();
{% elseif field.type == 'manyToOne' %}
    self.selected{{ field.fieldName|ucFirst }} = ko.observable();
{% else %}
    self.{{ field.fieldName }} = ko.observable();
{% endif %}
{% endfor %}
    self.isDeleted = ko.observable();

    self.set{{ entity }} = function({{ entity_cc }}) {
        if ({{ entity_cc }}) {
            self.{{ entity_cc }}Id({{ entity_cc }}.id);
{% for field in fields %}
{% if field.fieldName == 'date' %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName }});
{% elseif field.type == 'manyToOne' %}
            self.selected{{ field.fieldName|ucFirst }}({{ entity_cc }}.{{ field.fieldName }} ? {{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }}.id : null);
{% elseif field.type == 'datetime' %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }});
{% else %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }});
{% endif %}
{% endfor %}
            self.isDeleted({{ entity_cc }}.is_deleted);
        } 
    }

    self.set{{ entity }}({{ entity_cc }});

    self.bindForm = function(form) {
        var $form = $(form);
        $form.ajaxSubmit({
            dataType:  'json',
            beforeSubmit: function() {
                avro.showSpinner();
            },
            success: function(response){
                avro.hideSpinner();
                if (response['status'] == "OK") {
                    avro.createNotice(response['notice']);
                    self.set{{ entity_cc | ucFirst }}(response['data']);
                    if (list) {
                        list.{{ entity_cc }}s.remove(function({{ entity_cc }}) { return {{ entity_cc }}.id == response['data']['id']; });
                        list.{{ entity_cc }}s.unshift(response['data']);
                    }
                    $form.dialog('close');
                } else {
                    $.each( response['data'], function(field, message) {
                        $form.find('#error-container').append('<i class="sprite-error"></i> '+ message +'.').show();
                        $form.find('#{{ bundle_alias }}_{{ entity_cc }}_'+ field).closest('.control-group').addClass('error');
                    });
                }
            }
        });
    };
}


