function {{ entity_cc }}Model(options) {
    var self = this,
        {{ entity_cc }} = options.{{ entity_cc }}; 

    self.{{ entity_cc }}Id = ko.observable();
{% for field in fields %}
{% if field.type == 'oneToMany' %}
    self.{{ field.fieldName }} = ko.observableArray();
{% elseif field.type == 'manyToOne' %}
    self.selected{{ field.fieldName|ucFirst }} = ko.observable();
{% else %}
    self.{{ field.fieldName }} = ko.observable();
{% endif %}
{% endfor %}
    self.isDeleted = ko.observable();

    self.set{{ entity }} = function({{ entity_cc }}) {
        if ({{ entity_cc }}) {
            self.{{ entity_cc }}Id({{ entity_cc }}.id);
{% for field in fields %}
{% if field.fieldName == 'date' %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName }});
{% elseif field.type == 'manyToOne' %}
            self.selected{{ field.fieldName|ucFirst }}({{ entity_cc }}.{{ field.fieldName }} ? {{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }}.id : null);
{% elseif field.type == 'datetime' %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }});
{% else %}
            self.{{ field.fieldName }}({{ entity_cc }}.{{ field.fieldName | camelCaseToUnderscore }});
{% endif %}
{% endfor %}
            self.isDeleted({{ entity_cc }}.is_deleted);
        } 
    }

    self.set{{ entity }}({{ entity_cc }});

    // provide blank form binding to allow for newSelect binding to work
    self.bindForm = function() {
        return true;
    }
}


