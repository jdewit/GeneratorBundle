    /**
     * Show all {{ entity }}s.
     *
     * @Route("/list/{filter}", name="{{ bundleAlias }}_{{ entityCC }}_list", defaults={"filter" = "All"})
     * @Template()     
     */
    public function listAction($filter)
    {
        $form = $this->container->get('{{ bundle_alias }}.{{ entity_cc }}Search.form');
        $request = $this->container->get('request');
        $form->bindRequest($request);

        if ('POST' == $this->container->get('request')->getMethod()) {
            if ($form->isValid()) {
                switch($request->request->get('action')) {
                    case 'Edit':
                        $selected = $request->request->get('selected');
                        $session = $request->getSession();
                        $session->set('queue', array('route' => '{{ bundleAlias }}_{{ entityCC }}_edit', 'ids' => $selected));

                        return new RedirectResponse($this->container->get('router')->generate('{{ bundleAlias }}_{{ entityCC }}_edit', array('id' => reset($selected))));
                    break;
                    case 'Export':
                        ${{ entityCC }}Manager = $this->container->get('{{ bundleAlias }}.{{ entityCC }}_manager');
                        $writer = $this->container->get('avro_csv.writer');
                        $selected = $request->request->get('selected');
                        foreach ($selected as $id) {
                            ${{ entityCC }} = ${{ entityCC }}Manager->findAsArray($id);
                            if ($id === reset($selected)) {
                                $content = $writer->convertRow(array_keys(${{ entityCC }}));
                            }

                            $content .= $writer->convertRow(array_values(${{ entityCC }}));
                        }
                        $response = new Response($content);
                        $response->headers->set('Content-Type', 'application/csv');
                        $response->headers->set('Content-Disposition', 'attachment; filename="{{ entityCC }}.csv"');

                        return $response; 
                    break;
                    default:
                        ${{ entityCC }}s = $this->container->get('{{ bundleAlias }}.{{ entityCC }}_manager')->search($form->getData());
                    break;
                }
            }
        } else {
            ${{ entityCC }}s = $this->container->get('{{ bundleAlias }}.{{ entityCC }}_manager')->search();
        }

        return array(
            '{{ entityCC }}s' => ${{ entityCC }}s,
            'form' => $form->createView(),
            'filter' => $filter
        );
    }    
